{"version":3,"file":"error2.13f96d52.js","sources":["../../node_modules/lodash-es/isNil.js","../../node_modules/element-plus/es/utils/error2.mjs"],"sourcesContent":["/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n","import './types2.mjs';\nimport { isString } from '@vue/shared';\n\nclass ElementPlusError extends Error {\n  constructor(m) {\n    super(m);\n    this.name = \"ElementPlusError\";\n  }\n}\nfunction throwError(scope, m) {\n  throw new ElementPlusError(`[${scope}] ${m}`);\n}\nfunction debugWarn(scope, message) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const error = isString(scope) ? new ElementPlusError(`[${scope}] ${message}`) : scope;\n    console.warn(error);\n  }\n}\n\nexport { debugWarn, throwError };\n//# sourceMappingURL=error2.mjs.map\n"],"names":["isNil","value","ElementPlusError","Error","constructor","m","super","this","name","throwError","scope","debugWarn","message"],"mappings":"AAoBA,SAAAA,EAAeC,GACb,OAAgB,MAATA,EClBT,MAAMC,UAAyBC,MAC7BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,KAAO,oBAGhB,SAAAC,EAAoBC,EAAOL,GACzB,MAAM,IAAIH,EAAiB,IAAIQ,MAAUL,KAE3C,SAAAM,EAAmBD,EAAOE"}